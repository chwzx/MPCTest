from Compiler import input_output
from Compiler import mpc_math
from Compiler import lin_alg

l = LEN
dim = [LEN / COLS, COLS]

def compute_mean(mat):
    mean_vals = lin_alg.vector(dim[1])
    @for_range(dim[1])
    def g(j):
        @for_range(dim[0])
        def f(i):
            mean_vals[j] = mean_vals[j] + mat[i][j]
        mean_vals[j] = mean_vals[j] / dim[0]
    return mean_vals

def compute_std(mat, mean_vals):
    std_vals = lin_alg.vector(dim[1])
    @for_range(dim[1])
    def g(j):
        @for_range(dim[0])
        def f(i):
            std_vals[j] = std_vals[j] + (mat[i][j] - mean_vals[j]) ** 2
        std_vals[j] = std_vals[j] / dim[0]
        std_vals[j] = mpc_math.sqrt(std_vals[j])
    return std_vals

X = input_output.load_sfix_matrix(dim[0], dim[1])
mean_vals = compute_mean(X)
std_vals = compute_std(X, mean_vals)
input_output.output_sfix_vector(std_vals)